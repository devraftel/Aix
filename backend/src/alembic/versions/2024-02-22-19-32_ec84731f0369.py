"""empty message

Revision ID: ec84731f0369
Revises: 
Create Date: 2024-02-22 19:32:16.777920

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
import sqlmodel # added


# revision identifiers, used by Alembic.
revision = 'ec84731f0369'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    op.execute("CREATE EXTENSION IF NOT EXISTS pg_trgm") 
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Quiz',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('has_user_attempted', sa.Boolean(), nullable=False),
    sa.Column('time_limit', sa.Interval(), nullable=True),
    sa.Column('total_points', sa.Integer(), nullable=True),
    sa.Column('total_questions_count', sa.Integer(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Quiz_id'), 'Quiz', ['id'], unique=False)
    op.create_index(op.f('ix_Quiz_title'), 'Quiz', ['title'], unique=False)
    op.create_index(op.f('ix_Quiz_user_id'), 'Quiz', ['user_id'], unique=False)
    op.create_table('UserFile',
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('file_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('purpose', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('bytes', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_UserFile_id'), 'UserFile', ['id'], unique=False)
    op.create_index(op.f('ix_UserFile_user_id'), 'UserFile', ['user_id'], unique=False)
    op.create_table('Question',
    sa.Column('question_text', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('difficulty', sa.Enum('easy', 'medium', 'hard', name='questiondifficultyenum'), nullable=False),
    sa.Column('question_type', sa.Enum('single_select_mcq', 'multi_select_mcq', 'open_text_question', name='questiontypeenum'), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('quiz_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('correct_answer', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['quiz_id'], ['Quiz.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Question_id'), 'Question', ['id'], unique=False)
    op.create_index(op.f('ix_Question_question_text'), 'Question', ['question_text'], unique=False)
    op.create_index(op.f('ix_Question_question_type'), 'Question', ['question_type'], unique=False)
    op.create_index(op.f('ix_Question_user_id'), 'Question', ['user_id'], unique=False)
    op.create_table('QuizFeedback',
    sa.Column('feedback_score', sa.Integer(), nullable=True),
    sa.Column('feedback_text', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('llm_learning_json', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('quiz_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['quiz_id'], ['Quiz.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_QuizFeedback_id'), 'QuizFeedback', ['id'], unique=False)
    op.create_index(op.f('ix_QuizFeedback_quiz_id'), 'QuizFeedback', ['quiz_id'], unique=False)
    op.create_index(op.f('ix_QuizFeedback_user_id'), 'QuizFeedback', ['user_id'], unique=False)
    op.create_table('linkquizfile',
    sa.Column('quiz_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('user_file_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['quiz_id'], ['Quiz.id'], ),
    sa.ForeignKeyConstraint(['user_file_id'], ['UserFile.id'], ),
    sa.PrimaryKeyConstraint('quiz_id', 'user_file_id')
    )
    op.create_index(op.f('ix_linkquizfile_quiz_id'), 'linkquizfile', ['quiz_id'], unique=False)
    op.create_index(op.f('ix_linkquizfile_user_file_id'), 'linkquizfile', ['user_file_id'], unique=False)
    op.create_table('MCQOptions',
    sa.Column('question_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('option_text', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['Question.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_MCQOptions_id'), 'MCQOptions', ['id'], unique=False)
    op.create_table('QuizAttempt',
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('quiz_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('time_limit', sa.Interval(), nullable=False),
    sa.Column('time_start', sa.DateTime(), nullable=True),
    sa.Column('time_finish', sa.DateTime(), nullable=True),
    sa.Column('total_points', sa.Integer(), nullable=False),
    sa.Column('attempt_score', sa.Float(), nullable=True),
    sa.Column('quiz_feedback_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['quiz_feedback_id'], ['QuizFeedback.id'], ),
    sa.ForeignKeyConstraint(['quiz_id'], ['Quiz.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_QuizAttempt_id'), 'QuizAttempt', ['id'], unique=False)
    op.create_index(op.f('ix_QuizAttempt_quiz_id'), 'QuizAttempt', ['quiz_id'], unique=False)
    op.create_index(op.f('ix_QuizAttempt_user_id'), 'QuizAttempt', ['user_id'], unique=False)
    op.create_table('QuizQuestionFeedback',
    sa.Column('feedback_score', sa.Integer(), nullable=True),
    sa.Column('feedback_text', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('llm_learning_json', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('question_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['Question.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_QuizQuestionFeedback_id'), 'QuizQuestionFeedback', ['id'], unique=False)
    op.create_index(op.f('ix_QuizQuestionFeedback_question_id'), 'QuizQuestionFeedback', ['question_id'], unique=False)
    op.create_index(op.f('ix_QuizQuestionFeedback_user_id'), 'QuizQuestionFeedback', ['user_id'], unique=False)
    op.create_table('QuizAnswerSlot',
    sa.Column('quiz_attempt_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('question_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('question_type', sa.Enum('single_select_mcq', 'multi_select_mcq', 'open_text_question', name='questiontypeenum'), nullable=False),
    sa.Column('answer_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('answer_text', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('points_awarded', sa.Integer(), nullable=True),
    sa.Column('quiz_question_feedback_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['Question.id'], ),
    sa.ForeignKeyConstraint(['quiz_attempt_id'], ['QuizAttempt.id'], ),
    sa.ForeignKeyConstraint(['quiz_question_feedback_id'], ['QuizQuestionFeedback.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_QuizAnswerSlot_id'), 'QuizAnswerSlot', ['id'], unique=False)
    op.create_index(op.f('ix_QuizAnswerSlot_question_id'), 'QuizAnswerSlot', ['question_id'], unique=False)
    op.create_index(op.f('ix_QuizAnswerSlot_quiz_attempt_id'), 'QuizAnswerSlot', ['quiz_attempt_id'], unique=False)
    op.create_table('QuizGrade',
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('quiz_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('quiz_attempt_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('grade', sa.Integer(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['quiz_attempt_id'], ['QuizAttempt.id'], ),
    sa.ForeignKeyConstraint(['quiz_id'], ['Quiz.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_QuizGrade_id'), 'QuizGrade', ['id'], unique=False)
    op.create_index(op.f('ix_QuizGrade_quiz_attempt_id'), 'QuizGrade', ['quiz_attempt_id'], unique=False)
    op.create_index(op.f('ix_QuizGrade_quiz_id'), 'QuizGrade', ['quiz_id'], unique=False)
    op.create_index(op.f('ix_QuizGrade_user_id'), 'QuizGrade', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_QuizGrade_user_id'), table_name='QuizGrade')
    op.drop_index(op.f('ix_QuizGrade_quiz_id'), table_name='QuizGrade')
    op.drop_index(op.f('ix_QuizGrade_quiz_attempt_id'), table_name='QuizGrade')
    op.drop_index(op.f('ix_QuizGrade_id'), table_name='QuizGrade')
    op.drop_table('QuizGrade')
    op.drop_index(op.f('ix_QuizAnswerSlot_quiz_attempt_id'), table_name='QuizAnswerSlot')
    op.drop_index(op.f('ix_QuizAnswerSlot_question_id'), table_name='QuizAnswerSlot')
    op.drop_index(op.f('ix_QuizAnswerSlot_id'), table_name='QuizAnswerSlot')
    op.drop_table('QuizAnswerSlot')
    op.drop_index(op.f('ix_QuizQuestionFeedback_user_id'), table_name='QuizQuestionFeedback')
    op.drop_index(op.f('ix_QuizQuestionFeedback_question_id'), table_name='QuizQuestionFeedback')
    op.drop_index(op.f('ix_QuizQuestionFeedback_id'), table_name='QuizQuestionFeedback')
    op.drop_table('QuizQuestionFeedback')
    op.drop_index(op.f('ix_QuizAttempt_user_id'), table_name='QuizAttempt')
    op.drop_index(op.f('ix_QuizAttempt_quiz_id'), table_name='QuizAttempt')
    op.drop_index(op.f('ix_QuizAttempt_id'), table_name='QuizAttempt')
    op.drop_table('QuizAttempt')
    op.drop_index(op.f('ix_MCQOptions_id'), table_name='MCQOptions')
    op.drop_table('MCQOptions')
    op.drop_index(op.f('ix_linkquizfile_user_file_id'), table_name='linkquizfile')
    op.drop_index(op.f('ix_linkquizfile_quiz_id'), table_name='linkquizfile')
    op.drop_table('linkquizfile')
    op.drop_index(op.f('ix_QuizFeedback_user_id'), table_name='QuizFeedback')
    op.drop_index(op.f('ix_QuizFeedback_quiz_id'), table_name='QuizFeedback')
    op.drop_index(op.f('ix_QuizFeedback_id'), table_name='QuizFeedback')
    op.drop_table('QuizFeedback')
    op.drop_index(op.f('ix_Question_user_id'), table_name='Question')
    op.drop_index(op.f('ix_Question_question_type'), table_name='Question')
    op.drop_index(op.f('ix_Question_question_text'), table_name='Question')
    op.drop_index(op.f('ix_Question_id'), table_name='Question')
    op.drop_table('Question')
    op.drop_index(op.f('ix_UserFile_user_id'), table_name='UserFile')
    op.drop_index(op.f('ix_UserFile_id'), table_name='UserFile')
    op.drop_table('UserFile')
    op.drop_index(op.f('ix_Quiz_user_id'), table_name='Quiz')
    op.drop_index(op.f('ix_Quiz_title'), table_name='Quiz')
    op.drop_index(op.f('ix_Quiz_id'), table_name='Quiz')
    op.drop_table('Quiz')
    # ### end Alembic commands ###
